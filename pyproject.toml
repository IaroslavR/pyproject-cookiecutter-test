[tool.poetry]
authors = ["Iaroslav Russkikh"]
description = "Test this template"
name = "pyproject-cookiecutter-test"
readme = "README.rst"
version = "0.1.0"
repository = "https://github.com/IaroslavR/pyproject-cookiecutter-test"
documentation = "https://github.com/IaroslavR/pyproject-cookiecutter-test"
homepage = "https://github.com/IaroslavR/pyproject-cookiecutter-test"

[tool.poetry.dependencies]
attrs = "^19.3.0"
loguru = "^0.4.1"
python = "<3.8,>=3.7"
# dev deps
black = { version = "^19.10b0", optional = true }
coverage = {version = "^5.1", optional = true }
darglint = { version = "^1.2.3", optional = true }
flake8 = { version = "^3.7.9", optional = true }
flake8-annotations = { version = "^2.1.0", optional = true }
flake8-bandit = { version = "^2.1.2", optional = true }
flake8-black = { version = "^0.1.1", optional = true }
flake8-bugbear = { version = "^20.1.4", optional = true }
flake8-docstrings = { version = "^1.5.0", optional = true }
flake8-import-order = { version = "^0.18.1", optional = true }
mypy = { version = "^0.770", optional = true }
pytest = { version = "^5.4.1", optional = true }
pytest-flake8 = { version = "^1.0.5", optional = true }
safety = { version = "^1.8.7", optional = true }
sphinx = { version = "2.3.1", optional = true }
sphinx-autodoc-typehints = { version = "^1.10.3", optional = true }
sphinx-rtd-theme = { version = "^0.4.3", optional = true }
toml = { version = "^0.10.0", optional = true }

[tool.poetry.extras]
dev = [
    "black", "coverage", "darglint", "flake8", "flake8-annotations",
    "flake8-bandit", "flake8-black", "flake8-bugbear", "flake8-docstrings",
    "flake8-import-order", "mypy", "pytest", "pytest-flake8", "safety", "toml"]
docs = ["sphinx", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]

[tool.poetry.urls]
issues = "https://github.com/IaroslavR/pyproject-cookiecutter-test/issues"

[tool.coverage.run]
branch = true
source = ["pyproject_cookiecutter_test"]

[tool.coverage.report]
show_missing = true
#fail_under = 80

[tool.black]
line-length = 100
target-version = ['py37']

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]
